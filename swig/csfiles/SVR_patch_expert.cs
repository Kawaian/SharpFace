//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class SVR_patch_expert : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal SVR_patch_expert(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SVR_patch_expert obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~SVR_patch_expert() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          LaandmrkDetectorPINVOKE.delete_SVR_patch_expert(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public int type {
    set {
      LaandmrkDetectorPINVOKE.SVR_patch_expert_type_set(swigCPtr, value);
    } 
    get {
      int ret = LaandmrkDetectorPINVOKE.SVR_patch_expert_type_get(swigCPtr);
      return ret;
    } 
  }

  public double scaling {
    set {
      LaandmrkDetectorPINVOKE.SVR_patch_expert_scaling_set(swigCPtr, value);
    } 
    get {
      double ret = LaandmrkDetectorPINVOKE.SVR_patch_expert_scaling_get(swigCPtr);
      return ret;
    } 
  }

  public double bias {
    set {
      LaandmrkDetectorPINVOKE.SVR_patch_expert_bias_set(swigCPtr, value);
    } 
    get {
      double ret = LaandmrkDetectorPINVOKE.SVR_patch_expert_bias_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_cv__Mat_T_float_t weights {
    set {
      LaandmrkDetectorPINVOKE.SVR_patch_expert_weights_set(swigCPtr, SWIGTYPE_p_cv__Mat_T_float_t.getCPtr(value));
      if (LaandmrkDetectorPINVOKE.SWIGPendingException.Pending) throw LaandmrkDetectorPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_cv__Mat_T_float_t ret = new SWIGTYPE_p_cv__Mat_T_float_t(LaandmrkDetectorPINVOKE.SVR_patch_expert_weights_get(swigCPtr), true);
      if (LaandmrkDetectorPINVOKE.SWIGPendingException.Pending) throw LaandmrkDetectorPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_std__mapT_int_cv__Mat_T_double_t_std__lessT_int_t_t weights_dfts {
    set {
      LaandmrkDetectorPINVOKE.SVR_patch_expert_weights_dfts_set(swigCPtr, SWIGTYPE_p_std__mapT_int_cv__Mat_T_double_t_std__lessT_int_t_t.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = LaandmrkDetectorPINVOKE.SVR_patch_expert_weights_dfts_get(swigCPtr);
      SWIGTYPE_p_std__mapT_int_cv__Mat_T_double_t_std__lessT_int_t_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_std__mapT_int_cv__Mat_T_double_t_std__lessT_int_t_t(cPtr, false);
      return ret;
    } 
  }

  public double confidence {
    set {
      LaandmrkDetectorPINVOKE.SVR_patch_expert_confidence_set(swigCPtr, value);
    } 
    get {
      double ret = LaandmrkDetectorPINVOKE.SVR_patch_expert_confidence_get(swigCPtr);
      return ret;
    } 
  }

  public SVR_patch_expert() : this(LaandmrkDetectorPINVOKE.new_SVR_patch_expert__SWIG_0(), true) {
  }

  public SVR_patch_expert(SVR_patch_expert other) : this(LaandmrkDetectorPINVOKE.new_SVR_patch_expert__SWIG_1(SVR_patch_expert.getCPtr(other)), true) {
    if (LaandmrkDetectorPINVOKE.SWIGPendingException.Pending) throw LaandmrkDetectorPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Read(SWIGTYPE_p_std__ifstream stream) {
    LaandmrkDetectorPINVOKE.SVR_patch_expert_Read(swigCPtr, SWIGTYPE_p_std__ifstream.getCPtr(stream));
    if (LaandmrkDetectorPINVOKE.SWIGPendingException.Pending) throw LaandmrkDetectorPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Response(SWIGTYPE_p_cv__Mat_T_float_t area_of_interest, SWIGTYPE_p_cv__Mat_T_float_t response) {
    LaandmrkDetectorPINVOKE.SVR_patch_expert_Response(swigCPtr, SWIGTYPE_p_cv__Mat_T_float_t.getCPtr(area_of_interest), SWIGTYPE_p_cv__Mat_T_float_t.getCPtr(response));
    if (LaandmrkDetectorPINVOKE.SWIGPendingException.Pending) throw LaandmrkDetectorPINVOKE.SWIGPendingException.Retrieve();
  }

  public void ResponseDepth(SWIGTYPE_p_cv__Mat_T_float_t area_of_interest, SWIGTYPE_p_cv__Mat_T_float_t response) {
    LaandmrkDetectorPINVOKE.SVR_patch_expert_ResponseDepth(swigCPtr, SWIGTYPE_p_cv__Mat_T_float_t.getCPtr(area_of_interest), SWIGTYPE_p_cv__Mat_T_float_t.getCPtr(response));
    if (LaandmrkDetectorPINVOKE.SWIGPendingException.Pending) throw LaandmrkDetectorPINVOKE.SWIGPendingException.Retrieve();
  }

}
